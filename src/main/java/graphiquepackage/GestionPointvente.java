/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package graphiquepackage;

import com.mycompany.miniprojetjava.Client;
import com.mycompany.miniprojetjava.Miniprojetjava;
import com.mycompany.miniprojetjava.PointVente;
import java.awt.Color;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author semje
 */
public class GestionPointvente extends javax.swing.JPanel {

    /**
     * Creates new form GestionPointvente
     */
    
    boolean desactivationbouton = false ;
    
    public GestionPointvente() {
        initComponents();
        
        jT_idpointvente.setVisible(false);
       
       
        BoutonRestaurer.setVisible(false);
        
        
        message.setForeground( new Color(0,102,0));
        message.setText("Vous pouvez cliquez sur les entetes des colonnes, pour trier la table suivant cette colonne");
        
        
        
        DefaultTableModel model = (DefaultTableModel) jT_pointvente.getModel();
        
        String[][] tabclients = Miniprojetjava.baseDeDonnees.getpointventeNonSupprimes();
        
        for(int i=0 ; i < tabclients.length ; i++ ){
            model.addRow(tabclients[i]);
        }
        
        jT_pointvente.setAutoCreateRowSorter(true);
    }
    
    public static void rechercheAutomatique(JTable jt, JTextField jtf, JLabel jl){
        DefaultTableModel dtm = (DefaultTableModel) jt.getModel();
        String mot = jtf.getText().trim();
        
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(dtm);
        jt.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(mot));
        
        int nbre = jt.getRowCount();
        
        if(nbre == 0){
            jl.setForeground(Color.red);
            jl.setText("Aucun item corrspond à ce nom");
        }
        
        if(nbre > 0){
            jl.setForeground( new Color(0,102,0));
            jl.setText("Resultats correspondants : " + nbre);
        }
        
        if(mot.equals("")){
            jl.setText("");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jT_pointvente = new javax.swing.JTable();
        jT_nompointvente = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        ajouter = new javax.swing.JButton();
        miseajour = new javax.swing.JButton();
        supprimer = new javax.swing.JButton();
        voirpointventessupprimes = new javax.swing.JButton();
        BoutonRestaurer = new javax.swing.JButton();
        jT_idpointvente = new javax.swing.JTextField();
        jT_recherche = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        message = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gestion des points de vente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18), new java.awt.Color(153, 153, 153))); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(1010, 650));

        jT_pointvente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id point vente", "Nom point vente"
            }
        ));
        jT_pointvente.setGridColor(new java.awt.Color(255, 255, 255));
        jT_pointvente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jT_pointventeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jT_pointvente);

        jLabel1.setText("Nom :");

        ajouter.setBackground(new java.awt.Color(0, 204, 204));
        ajouter.setText("Ajouter");
        ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterActionPerformed(evt);
            }
        });

        miseajour.setBackground(new java.awt.Color(0, 204, 204));
        miseajour.setText("Mettre à jour");
        miseajour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miseajourActionPerformed(evt);
            }
        });

        supprimer.setBackground(new java.awt.Color(0, 204, 204));
        supprimer.setText("Supprimer");
        supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerActionPerformed(evt);
            }
        });

        voirpointventessupprimes.setBackground(new java.awt.Color(255, 153, 153));
        voirpointventessupprimes.setText("Voir les points supprimés");
        voirpointventessupprimes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voirpointventessupprimesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(voirpointventessupprimes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(miseajour, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(supprimer, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ajouter)
                    .addComponent(miseajour)
                    .addComponent(supprimer))
                .addGap(18, 18, 18)
                .addComponent(voirpointventessupprimes)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        BoutonRestaurer.setBackground(new java.awt.Color(153, 204, 255));
        BoutonRestaurer.setText("Restaurer le point de vente");
        BoutonRestaurer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonRestaurerActionPerformed(evt);
            }
        });

        jT_idpointvente.setText("0");

        jT_recherche.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jT_rechercheKeyReleased(evt);
            }
        });

        jLabel2.setText("Rechercher point de vente : ");

        message.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        message.setText("message");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BoutonRestaurer, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(message, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jT_idpointvente, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jT_nompointvente, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 15, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(jT_recherche, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE))))
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(message)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jT_recherche, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jT_idpointvente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jT_nompointvente, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(219, 219, 219)))
                .addGap(14, 14, 14)
                .addComponent(BoutonRestaurer)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1010, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerActionPerformed
        
        int id_pointvente = Integer.parseInt(jT_idpointvente.getText());
        
        
        DefaultTableModel model = (DefaultTableModel) jT_pointvente.getModel();
        
        if(jT_pointvente.getSelectedRow() == -1){
            if(jT_pointvente.getRowCount() == 0){
                message.setText("La table est encore vide !");
            }
            else{
                message.setText("Vous devriez d'abord selectionner un item de la table");
            }
        }
        
        else{
            
            int j = jT_pointvente.getSelectedRow(); 
            int i = jT_pointvente.convertRowIndexToModel(j);
            
            
            Miniprojetjava.baseDeDonnees.supprimerPointvente_BD(id_pointvente);
            model.removeRow(i);
                    
            jT_idpointvente.setText("0");
            jT_nompointvente.setText("");
            

            message.setText("Cliquez sur le bouton ajouter pour ajouter un point de vente à la table");
            
        }
        
    }//GEN-LAST:event_supprimerActionPerformed

    private void BoutonRestaurerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonRestaurerActionPerformed
        
        int id_pointvente = Integer.parseInt(jT_idpointvente.getText());
        
        
        DefaultTableModel model = (DefaultTableModel) jT_pointvente.getModel();
        
        if(jT_pointvente.getSelectedRow() == -1){
            if(jT_pointvente.getRowCount() == 0){
                message.setText("La table est encore vide !");
            }
            else{
                message.setText("Vous devriez d'abord selectionner un item de la table");
            }
        }
        
        else{
            
            int j = jT_pointvente.getSelectedRow(); 
            int i = jT_pointvente.convertRowIndexToModel(j);
            
            
            Miniprojetjava.baseDeDonnees.restaurerPointventeSupprime(id_pointvente);
            model.removeRow(i);
                    
            jT_idpointvente.setText("0");
            jT_nompointvente.setText("");
            

            message.setText("Cliquez sur le bouton restaurer pour restaurer un point de vente supprime");
            
        }
        
    }//GEN-LAST:event_BoutonRestaurerActionPerformed

    private void jT_pointventeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jT_pointventeMouseClicked
        
        try{
            
            int j = jT_pointvente.getSelectedRow(); 
            int i = jT_pointvente.convertRowIndexToModel(j);
            
            TableModel tm = jT_pointvente.getModel();
            
            jT_idpointvente.setText(tm.getValueAt(i,0).toString());
            jT_nompointvente.setText(tm.getValueAt(i,1).toString());
            
            
        }
        catch(Exception e){
            message.setText("Vous devez cliquez sur ligne !");
        }
    }//GEN-LAST:event_jT_pointventeMouseClicked

    private void jT_rechercheKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jT_rechercheKeyReleased
        
        JPanel_Caissier.rechercheAutomatique(jT_pointvente, jT_recherche, message);
        
        if(message.getText().equals("")){
            message.setText("Vous pouvez cliquez sur les entetes des colonnes, pour trier la table suivant cette colonne");
        }
        
    }//GEN-LAST:event_jT_rechercheKeyReleased

    private void voirpointventessupprimesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voirpointventessupprimesActionPerformed
        
        if( ! desactivationbouton){
            
            String[][] tabprodSup = Miniprojetjava.baseDeDonnees.getpointventeSupprimes();
                
            DefaultTableModel model = (DefaultTableModel) jT_pointvente.getModel();

            model.setRowCount(0);

            String[] columnNames = {"Id point vente", "Nom point"};

            model.setDataVector(tabprodSup, columnNames );

            BoutonRestaurer.setVisible(true);

            voirpointventessupprimes.setText("Revenir en arrière");

            ajouter.setEnabled(desactivationbouton);
            miseajour.setEnabled(desactivationbouton);
            supprimer.setEnabled(desactivationbouton);
            
            desactivationbouton = true ;
        }
        else{
            
            String[][] tabprodSup = Miniprojetjava.baseDeDonnees.getpointventeNonSupprimes();
                
            DefaultTableModel model = (DefaultTableModel) jT_pointvente.getModel();

            model.setRowCount(0);

            String[] columnNames = {"Id point vente", "Nom point"};

            model.setDataVector(tabprodSup, columnNames );

            BoutonRestaurer.setVisible(false);

            voirpointventessupprimes.setText("Voir les points de vente supprimés");

            ajouter.setEnabled(desactivationbouton);
            miseajour.setEnabled(desactivationbouton);
            supprimer.setEnabled(desactivationbouton);
            
            desactivationbouton = false ;
        }
        
    }//GEN-LAST:event_voirpointventessupprimesActionPerformed

    private void miseajourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miseajourActionPerformed
        
        int id_pointvente = 0 ;
        
        if(jT_nompointvente.getText().equals("")){
            message.setText("Tous les champs doivent être remplis");
        }
        else{
            try{
                id_pointvente = Integer.parseInt(jT_idpointvente.getText());
                
                
                
                int option = JOptionPane.showOptionDialog(
                    null,                             // Parent component
                    "Voulez-vous vraiment modifier ce point de vente ?",       // Message
                    "Confirmation",                  // Titre de la boîte de dialogue
                    JOptionPane.YES_NO_OPTION,        // Type de boîte de dialogue
                    JOptionPane.QUESTION_MESSAGE,    // Type d'icône
                    null,                             // Options personnalisées
                    null,                             // Option sélectionnée par défaut
                    null                              // Options de fermeture de la boîte de dialogue
                );

                if (option == JOptionPane.YES_OPTION) {
                    
                
                    PointVente p = new PointVente( id_pointvente +"_"+ jT_nompointvente.getText() + "_0");

                    DefaultTableModel model = (DefaultTableModel) jT_pointvente.getModel();
                    
                    
                    
                    //model.addRow(new Object[]{p.idproduit, p.nom, p.description, p.prix , p.paysorigine, p.tva, p.fournisseur, p.poids, p.quatitestock});
                    
                    
                    model.setValueAt(p.idpointvente, jT_pointvente.getSelectedRow(), 0);
                    model.setValueAt(p.nom, jT_pointvente.getSelectedRow(), 1);
                    
                    
                    
                    //model.addRow(new Object[]{p.idclient, p.nom, p.prenom, p.numerocartefidelite , p.mail, p.codepostal});
                    
                    Miniprojetjava.baseDeDonnees.modifierPointvente_BD(id_pointvente, p);
                    
                    jT_idpointvente.setText("0");
                    jT_nompointvente.setText("");
                    

                    message.setText("Cliquez sur le bouton ajouter pour ajouter un point de vente à la table");

                }

                else{
                    message.setText("Vous pouvez cliquez sur les entetes des colonnes, pour trier la table suivant cette colonne");
                }

            }

            catch(Exception e){
                message.setText("L'ID doit etre un entier");
            }
        }
        
    }//GEN-LAST:event_miseajourActionPerformed

    private void ajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterActionPerformed
        
        int id_pointvente = 0 ;
        
        if(jT_nompointvente.getText().equals("")){
            message.setText("Tous les champs doivent être remplis");
        }
        else{
            try{
                id_pointvente = Integer.parseInt(jT_idpointvente.getText());
                
                
                
                int option = JOptionPane.showOptionDialog(
                    null,                             // Parent component
                    "Voulez-vous vraiment l'ajouter comme un nouveau point de vente ?",       // Message
                    "Confirmation",                  // Titre de la boîte de dialogue
                    JOptionPane.YES_NO_OPTION,        // Type de boîte de dialogue
                    JOptionPane.QUESTION_MESSAGE,    // Type d'icône
                    null,                             // Options personnalisées
                    null,                             // Option sélectionnée par défaut
                    null                              // Options de fermeture de la boîte de dialogue
                );

                if (option == JOptionPane.YES_OPTION) {
                    
                    id_pointvente = Miniprojetjava.baseDeDonnees.dernier_id_pointvente + 1 ;
                
                    PointVente p = new PointVente( id_pointvente +"_"+ jT_nompointvente.getText() + "_0");

                    DefaultTableModel model = (DefaultTableModel) jT_pointvente.getModel();
                    
                    model.addRow(new Object[]{p.idpointvente, p.nom});
                    
                    Miniprojetjava.baseDeDonnees.ajouterPointvente_BD(p);
                    
                    jT_idpointvente.setText("0");
                    jT_nompointvente.setText("");
                    

                    message.setText("Cliquez sur le bouton ajouter pour ajouter un point de vente à la table");

                }

                else{
                    message.setText("Vous pouvez cliquez sur les entetes des colonnes, pour trier la table suivant cette colonne");
                }

            }

            catch(Exception e){
                message.setText("L'ID doit etre un entier");
            }
        }
        
    }//GEN-LAST:event_ajouterActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BoutonRestaurer;
    private javax.swing.JButton ajouter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jT_idpointvente;
    private javax.swing.JTextField jT_nompointvente;
    private javax.swing.JTable jT_pointvente;
    private javax.swing.JTextField jT_recherche;
    private javax.swing.JLabel message;
    private javax.swing.JButton miseajour;
    private javax.swing.JButton supprimer;
    private javax.swing.JButton voirpointventessupprimes;
    // End of variables declaration//GEN-END:variables
}
